name: Cross-compile for ARM64

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install ARM64 cross-compiler and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu \
            meson wget build-essential cmake-extras cmake gettext gettext-base \
            fontconfig libfontconfig-dev libffi-dev libxml2-dev libdrm-dev \
            libxkbcommon-x11-dev libxkbregistry-dev libxkbcommon-dev libpixman-1-dev \
            libudev-dev libseat-dev seatd libxcb-dri3-dev libegl-dev libgles2 \
            libegl1-mesa-dev libgles2-mesa-dev glslang-tools libinput-bin libinput-dev \
            libxcb-composite0-dev libavutil-dev libavcodec-dev libavformat-dev \
            libxcb-ewmh2 libxcb-ewmh-dev libxcb-present-dev libxcb-icccm4-dev \
            libxcb-render-util0-dev libxcb-res0-dev libxcb-xinput-dev libopengl-dev \
            libgles2-mesa-dev

      - name: Set up environment variables for OpenGL
        run: |
          export OPENGL_gles3_LIBRARY=/usr/lib/aarch64-linux-gnu/libGLESv2.so
          export OPENGL_egl_LIBRARY=/usr/lib/aarch64-linux-gnu/libEGL.so

      - name: Install tomlplusplus from source
        run: |
          git clone https://github.com/marzer/tomlplusplus.git
          cd tomlplusplus
          mkdir build
          cd build
          cmake .. -DCMAKE_INSTALL_PREFIX=/usr
          sudo make install

      - name: Create aarch64 toolchain file
        run: |
          echo "set(CMAKE_SYSTEM_NAME Linux)" > toolchain_aarch64.cmake
          echo "set(CMAKE_SYSTEM_PROCESSOR aarch64)" >> toolchain_aarch64.cmake
          echo "set(CMAKE_C_COMPILER /usr/bin/aarch64-linux-gnu-gcc)" >> toolchain_aarch64.cmake
          echo "set(CMAKE_CXX_COMPILER /usr/bin/aarch64-linux-gnu-g++)" >> toolchain_aarch64.cmake
          echo "set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)" >> toolchain_aarch64.cmake
          echo "set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)" >> toolchain_aarch64.cmake
          echo "set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)" >> toolchain_aarch64.cmake
          echo "set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)" >> toolchain_aarch64.cmake

      - name: Build Hyprland for aarch64 using make
        run: |
          git clone --recursive https://github.com/hyprwm/Hyprland
          cd Hyprland
          cmake -DCMAKE_TOOLCHAIN_FILE=../toolchain_aarch64.cmake -DOPENGL_gles3_LIBRARY=/usr/lib/aarch64-linux-gnu/libGLESv2.so -G "Unix Makefiles" -B build
          make -C build

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: hyprland-aarch64-binary
          path: ./Hyprland/build/Hyprland
